/**
 * Acquire a calibration Fourier Ptychography dataset.
 * 
 * This code acquires images by illuminating LEDs in a LED matrix in a spiral pattern starting from a center coordinate.
 * One image is acquired at each LED position.
 */

 /*
  * Configuration
  */
 int numLEDs = 4 * 4;
 int[] centerLEDCoord = {17, 15};

 /*
  * DO NOT EDIT BELOW THIS LINE
  * =================================================================================================================================
  */
 String port = "COM5"; 
 String drawCommand = "draw ";
 String fillCommand = "fill ";
 String commandTerminator = "\n"; 
 String answerTerminator = "\n";
 
 String direction = "counterclockwise";

int[] spiralCoordinates(int index, int[] center, String direction) {
    int row = center[0];
    int col = center[1];
    if (index == 0) {
        return new int[]{row, col};
    }

    int step = 1;
    int stepsTaken = 0;
    int stepsToTake = 1;
    HashMap directions = new HashMap();
    directions.put("clockwise", new int[]{0, 1, 1, 0, 0, -1, -1, 0});
    directions.put("counterclockwise", new int[]{0, 1, -1, 0, 0, -1, 1, 0});
    int directionIndex = 0;

    while (stepsTaken < index) {
        int dr = directions.get(direction)[directionIndex * 2];
        int dc = directions.get(direction)[directionIndex * 2 + 1];
        for (int i = 0; i < step; i++) {
            row += dr;
            col += dc;
            stepsTaken++;
            if (stepsTaken == index) {
                return new int[]{row, col};
            }
        }
        directionIndex = (directionIndex + 1) % 4;
        if (directionIndex % 2 == 0) {
            step++;
        }
    }

    return new int[]{row, col};
}

/*
 * Main acquisition loop
 */

int[] currentCoords;
for (int i; i < numLEDs; i++) {
    // Clear the board
    mmc.setSerialPortCommand(port, fillCommand + "0", commandTerminator);
    answer = mmc.getSerialPortAnswer(port, answerTerminator); 

	 // Get the pixel coordinates
	 currentCoords = spiral(i, centerLEDcoord, direction);

   // Draw the pixel
   mmc.setSerialPortCommand(port, drawCommand + currentCoords[0] + " " + cuurentCoords[1] +" 1", commandTerminator);
   answer = mmc.getSerialPortAnswer(port, answerTerminator);

	// Sleep 500 ms
   mmc.sleep(500);
 }
