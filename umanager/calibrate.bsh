/**
 * Acquire a calibration Fourier Ptychography dataset.
 * 
 * This code acquires images by illuminating LEDs in a LED matrix in a spiral pattern starting from a center coordinate.
 * One image is acquired at each LED position.
 */

 /*
  * Configuration
  */
 int numLEDs = 20 * 20;
 int[] centerLEDCoord = {13, 15};

/*
 * DO NOT EDIT BELOW THIS LINE
 * =================================================================================================================================
 */
String port = "COM5"; 
String drawCommand = "draw ";
String fillCommand = "fill ";
String commandTerminator = "\n"; 
String answerTerminator = "\n";
 
String direction = "counterclockwise";

int[] spiral(int index, int[] center, String direction) {
    int row = center[0];
    int col = center[1];
    if (index == 0) {
        return new int[]{row, col};
    }

    int step = 1;
    int stepsTaken = 0;
    int stepsToTake = 1;
    HashMap directions = new HashMap();
    directions.put("clockwise", new int[]{0, 1, 1, 0, 0, -1, -1, 0});
    directions.put("counterclockwise", new int[]{0, 1, -1, 0, 0, -1, 1, 0});
    int directionIndex = 0;

    while (stepsTaken < index) {
        int dr = directions.get(direction)[directionIndex * 2];
        int dc = directions.get(direction)[directionIndex * 2 + 1];
        for (int i = 0; i < step; i++) {
            row += dr;
            col += dc;
            stepsTaken++;
            if (stepsTaken == index) {
                return new int[]{row, col};
            }
        }
        directionIndex = (directionIndex + 1) % 4;
        if (directionIndex % 2 == 0) {
            step++;
        }
    }

    return new int[]{row, col};
}

import org.micromanager.data.Coords;
import org.micromanager.data.Image;
import org.micromanager.data.Datastore;
import org.micromanager.display.DisplayWindow;

import mmcorej.TaggedImage;

/*
 * Prepare the image datastore and acquisition
 */
Datastore store = mm.data().createRAMDatastore();
DisplayWindow display = mm.displays().createDisplay(store);
mm.displays().manage(store);
cb = mm.data().coordsBuilder();


/*
 * Main acquisition loop
 */

int[] currentCoords;
Image image;
for (int i = 0; i < numLEDs; i++) {
	print(i);
    // Clear the board
    mmc.setSerialPortCommand(port, fillCommand + "0", commandTerminator);
    answer = mmc.getSerialPortAnswer(port, answerTerminator); 

	 // Get the pixel coordinates
	 currentCoords = spiral(i, centerLEDCoord, direction);

    // Draw the pixel
    mmc.setSerialPortCommand(port, drawCommand + currentCoords[0] + " " + currentCoords[1] +" 1", commandTerminator);
    answer = mmc.getSerialPortAnswer(port, answerTerminator);

    // Sleep 100 ms to ensure the pixel is lit
    mmc.sleep(100);

    // Take image
    images = mm.live().snap(true); 
    img = images.get(0);
    // copy image with Coords specified by our builder
    cImg = img.copyAtCoords(cb.time(i).build());
    store.putImage(cImg);
}

store.freeze()
